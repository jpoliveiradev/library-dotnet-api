<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="T:Library.API.V2.Controllers.AlugueisController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.#ctor(Library.API.Services.Interfaces.IAluguelService,Library.API.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.Get(Library.API.Helpers.PageParams)">
            <summary>
            Método para retornar todos os Alugueis
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.GetById(System.Int32)">
            <summary>
            Método para retornar um Aluguel pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.Post(Library.API.V2.Dtos.AluguelDto)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.Put(Library.API.V2.Dtos.AluguelDtoUpdate)">
            <summary>
            
            </summary>,
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.AlugueisController.Delete(System.Int32)">
            <summary>
            Método para deletar um Aluguel através do Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.V2.Controllers.ClientesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.#ctor(Library.API.Services.Interfaces.IClienteService,Library.API.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.Get(Library.API.Helpers.PageParams)">
            <summary>
            Método para retornar todos os Clientes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.GetById(System.Int32)">
            <summary>
             Método para retornar um Cliente pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.Post(Library.API.V2.Dtos.ClienteDto)">
            <summary>
             Método para Adicionar um ClienteDto
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.Put(System.Int32,Library.API.V2.Dtos.ClienteDto)">
            <summary>
            Método para atualizar um Cliente através do Id
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.Patch(System.Int32,Library.API.V2.Dtos.ClienteDto)">
            <summary>
            Método para atualizar um Cliente através do Id
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.ClientesController.Delete(System.Int32)">
            <summary>
            Método para deletar um Cliente através do Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.V2.Controllers.EditorasController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.#ctor(Library.API.Services.Interfaces.IEditoraService,Library.API.Data.IRepository)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="repo"></param>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.Get(Library.API.Helpers.PageParams)">
            <summary>
            Método para retornar todas as Editoras
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.GetById(System.Int32)">
            <summary>
            Método para retornar uma Editora pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.Post(Library.API.Models.Editoras)">
            <summary>
            
            </summary>
            <param name="editora"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.Put(System.Int32,Library.API.Models.Editoras)">
            <summary>
            Método para atualizar uma Editora através do Id
            </summary>
            <param name="id"></param>
            <param name="editoras"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.Patch(System.Int32,Library.API.Models.Editoras)">
            <summary>
            Método para atualizar uma Editora através do Id
            </summary>
            <param name="id"></param>
            <param name="editoras"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.EditorasController.Delete(System.Int32)">
            <summary>
            Método para deletar uma Editora através do Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.V2.Controllers.LivrosController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.#ctor(Library.API.Services.Interfaces.ILivroService,Library.API.Data.IRepository)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="repo"></param>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.Get(Library.API.Helpers.PageParams)">
            <summary>
            Método para retornar todos os Livros
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.GetById(System.Int32)">
            <summary>
            Método para retornar um Livro pelo id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.Post(Library.API.Models.Livros)">
            <summary>
            Método para adicionar um Livro
            </summary>
            <param name="livro"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.Put(System.Int32,Library.API.Models.Livros)">
            <summary>
            Método para atualizar um Livro através do Id
            </summary>
            <param name="id"></param>
            <param name="livros"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.Patch(System.Int32,Library.API.Models.Livros)">
            <summary>
            Método para atualizar um Livro através do Id
            </summary>
            <param name="id"></param>
            <param name="livros"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.V2.Controllers.LivrosController.Delete(System.Int32)">
            <summary>
            Método para deletar um Livro através do Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
